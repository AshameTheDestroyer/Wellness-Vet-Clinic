$first-screen-width: 910px;
$second-screen-width: 800px;
$third-screen-width: 600px;
$fourth-screen-width: 450px;

@font-face {
    font-family: CascadiaCode;
    font-style: normal;
    font-weight: 400;
    src: local("Cascadia Code"),
        url("https://fonts.cdnfonts.com/s/29131/Cascadia.woff") format("woff");
}

html {
    --header-height: 12rem;

    scroll-behavior: smooth;
    scroll-padding-top: var(--header-height);
}

:root {
    --main-colour: #9B674F;
    --main-lighter-colour: #ba866d;
    --main-darker-colour: #613e2e;
    --main-transparent-colour: #ba856d81;

    --secondary-colour: #8ADAB2;
    --ternary-colour: #DF826C;

    --fore-colour: #222;
    --fore-darker-colour: #111;

    --background-colour: #FEFAE0;
    --background-darker-colour: #B99470;

    --half-transparent: #0000007c;
    --3quarter-transparent: #000000bf;

    --best-bezier-curve: cubic-bezier(0.15, 0.95, 0.3, 1.5);

    font-size: 62.5%;
}

body {
    font-size: 1.6rem;
    font-family: "Cascadia Code", CascadiaCode, Consolas, Arial;

    min-height: 100vh;
    min-height: 100dvh;

    margin: 0;

    color: var(--fore-colour);
    background-color: var(--background-colour);

    transition: color 500ms, background-color 500ms;

    overflow-x: hidden;

    &>#root>main {
        --padding: 4rem;

        min-height: calc(100vh - var(--header-height) - var(--padding) * 2);
        min-height: calc(100dvh - var(--header-height) - var(--padding) * 2);

        padding: var(--padding);
    }
}

input,
button {
    font-family: inherit;
    font-size: inherit;

    color: inherit;
    background-color: var(--3quarter-transparent);

    border: none;
    outline: none;
}

input {
    padding: 1rem 1.5rem;

    border-radius: 100rem;
    border: 2px solid var(--fore-colour);
}

button {
    padding: 1.25rem 2rem;

    border-radius: 1rem;

    cursor: pointer;
}

@for $i from 1 through 6 {
    h#{$i} {
        margin: 0;
    }
}

p,
figure {
    margin: 0;
}

a {
    color: inherit;
}

q {
    color: var(--main-colour);
}

q::before,
q::after {
    content: "";
}

ul {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    padding-left: 2ch;
    margin: 0;
}

::-webkit-scrollbar {
    width: 1rem;
    height: 1rem;
}

::-webkit-scrollbar-track {
    border: 0.3rem solid var(--half-transparent);
    background-color: var(--main-darker-colour);
}

*:not(body)::-webkit-scrollbar-track {
    border-radius: 100rem;
}

::-webkit-scrollbar-thumb {
    background-color: var(--half-transparent);
}

*:not(body)::-webkit-scrollbar-thumb {
    border-radius: 100rem;
}

@mixin text-shadow($thickness: 0.2rem, $colour: var(--main-colour)) {
    text-shadow: $thickness $thickness 0 $colour,
        calc(-1 * $thickness) $thickness 0 $colour,
        $thickness calc(-1 * $thickness) 0 $colour,
        calc(-1 * $thickness) calc(-1 * $thickness) 0 $colour;
}

svg {
    fill: var(--fore-colour);
    stroke: var(--fore-colour);

    transition: fill 500ms, stroke 500ms;
}

.button-displayer {
    display: flex;
    place-content: center;
    place-items: center;
    gap: 1rem;
}